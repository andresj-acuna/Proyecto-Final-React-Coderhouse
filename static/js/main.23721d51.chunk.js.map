{"version":3,"sources":["Context/CartContext.js","components/Cart/CartWidget/CartWidget.js","components/Home/NavBar/NavBar.js","components/Home/ItemListContainer/ItemList/Item/Item.js","components/Home/ItemListContainer/ItemList/ItemList.js","firebase/firebase.js","components/Home/ItemListContainer/ItemListContainer.js","components/Home/Home.js","components/Home/ItemCount/ItemCount.js","components/Home/ItemDetailContainer/ItemDetail/Card/ProductCard.js","components/Home/ItemDetailContainer/ItemDetail/ItemDetail.js","components/Home/ItemDetailContainer/ItemDetailContainer.js","components/Cart/Cart.js","components/BuyForm/BuyForm.js","components/MyOrders/MyOrders.js","App.js","index.js"],"names":["CartContext","createContext","CartProvider","children","itemsInLocal","localStorage","getItem","JSON","parse","ordersInLocal","useState","cart","setCart","items","setItems","total","setTotal","orderIds","setOrderIds","useEffect","updateItems","setItem","stringify","console","log","getTotal","reduce","acc","item","quantity","sumalize","prod","price","Provider","value","addToCart","obj","duplicate","find","product","undefined","indexOfDuplicate","findIndex","splice","imageUrl","id","stock","isInCart","itemName","deleteItem","editedItems","filter","CartWidget","props","useContext","className","to","NavBar","Item","formatPeso","Intl","NumberFormat","style","currency","minimumFractionDigits","map","data","Card","Image","src","width","wrapped","ui","Content","Header","title","Description","format","Button","color","ItemList","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","ItemListContainer","category","useParams","collection","get","then","querySnapshot","documents","docs","doc","length","Container","Loader","active","inline","size","Home","ItemCount","initial","addCart","parseInt","count","setCount","btnDel","btnAdd","btnStock","disabled","onClick","e","ProductCard","setInitial","myContext","Extra","Rating","icon","defaultRating","maxRating","clearable","detail","ItemDetail","ItemDetailContainer","productID","exists","catch","error","Cart","Table","unstackable","Row","HeaderCell","i","Body","Cell","clasName","alt","Icon","link","name","BuyForm","useForm","register","handleSubmit","watch","errors","email","confirmEmail","passErr","setPassErr","setError","newId","setNewId","history","useHistory","onSubmit","order","buyer","lastname","phone","telephone","qty","date","Timestamp","fromDate","Date","removeItem","add","err","finally","itemCollection","bache","batch","forEach","update","commit","updateStocks","push","type","autoComplete","ref","required","minLength","message","maxLength","htmlFor","pattern","onBlur","onChange","display","MyOrders","ordersInfo","setOrdersInfo","isMounted","itemRefs","Promise","all","reverse","getOrders","time","seconds","DateTime","fromSeconds","c","day","month","year","hour","minute","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23721d51.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext([{}]);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const itemsInLocal = () => {\r\n    if (localStorage.getItem('cart') !== null) {\r\n      return JSON.parse(localStorage.getItem('cart'));\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const ordersInLocal = () => {\r\n    if (localStorage.getItem('my-orders') !== null) {\r\n      return JSON.parse(localStorage.getItem('my-orders'));\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const [cart, setCart] = useState(itemsInLocal);\r\n  const [items, setItems] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [orderIds, setOrderIds] = useState(ordersInLocal);\r\n\r\n  useEffect(() => {\r\n    updateItems();\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    console.log(cart);\r\n    localStorage.setItem('my-orders', JSON.stringify(orderIds));\r\n    getTotal();\r\n  });\r\n\r\n  const addToCart = (obj) => {\r\n    // Primero busco si ya existe dentro del array del state Cart un objeto que tenga\r\n    // el mismo nombre que el que quiero agregar al carrito, si no existe ahi si lo agrego.\r\n    const duplicate = cart.find((product) => product.item === obj.item);\r\n\r\n    if (duplicate !== undefined) {\r\n      const indexOfDuplicate = cart.findIndex(\r\n        (product) => product.item === obj.item,\r\n      );\r\n\r\n      cart.splice(indexOfDuplicate, 1, {\r\n        item: obj.item,\r\n        quantity: obj.quantity + duplicate.quantity,\r\n        price: obj.price,\r\n        imageUrl: obj.imageUrl,\r\n        id: obj.id,\r\n        stock: obj.stock,\r\n      });\r\n    } else {\r\n      setCart([\r\n        ...cart,\r\n        {\r\n          item: obj.item,\r\n          quantity: obj.quantity,\r\n          price: obj.price,\r\n          imageUrl: obj.imageUrl,\r\n          id: obj.id,\r\n          stock: obj.stock,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const isInCart = (itemName) => {\r\n    const isIn = cart.find((product) => product.item === itemName);\r\n\r\n    return isIn;\r\n  };\r\n\r\n  const updateItems = () => {\r\n    let total = cart.reduce((acc, item) => acc + item.quantity, 0);\r\n    setItems(total);\r\n  };\r\n\r\n  const getTotal = () => {\r\n    const sumalize = cart.reduce(\r\n      (acc, prod) => acc + prod.price * prod.quantity,\r\n      0,\r\n    );\r\n    setTotal(sumalize);\r\n  };\r\n\r\n  const deleteItem = (itemName) => {\r\n    const editedItems = cart.filter((product) => product.item !== itemName);\r\n    setCart(editedItems);\r\n    localStorage.setItem('cart', JSON.stringify(editedItems));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        addToCart,\r\n        isInCart,\r\n        cart,\r\n        setCart,\r\n        items,\r\n        updateItems,\r\n        total,\r\n        deleteItem,\r\n        orderIds,\r\n        setOrderIds,\r\n        itemsInLocal,\r\n        ordersInLocal,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CartContext } from \"../../../Context/CartContext\";\r\n\r\nimport \"./CartWidget.css\";\r\nexport const CartWidget = (props) => {\r\n  const { items } = useContext(CartContext);\r\n\r\n  return (\r\n    <>\r\n      {items > 0 ? (\r\n        <div className=\"carrito\">\r\n          <Link to=\"/cart\">\r\n            <i className=\"shopping cart icon\"></i>\r\n          </Link>\r\n          {items > 0 && <span>{items}</span>}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// export default CartWidget;\r\n","import React from \"react\";\r\nimport { CartWidget } from \"../../Cart/CartWidget/CartWidget\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './NavBar.css';\r\n\r\nexport const NavBar = (props) => {\r\n  const cellphones = 'cellphones';\r\n  const tv = 'tv';\r\n  const videogames = 'videogames'\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"header-content\">\r\n            <nav className=\"navbar\">\r\n              <div className=\"navbar-header\">\r\n                <Link className=\"navbar-brand\" to={\"/\"}>\r\n                  Eindhoven\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"menu-carrito\">\r\n                <ul className=\"menu\">\r\n                  <li>\r\n                    <Link to={\"/\"}>Home</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={\"/categories/\" + cellphones}>Celulares</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={\"/categories/\" + tv}>Televisores</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={\"/categories/\" + videogames}>Gaming</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={'/my-orders'}>Mis compras</Link>\r\n                  </li>\r\n                </ul>\r\n                <CartWidget />\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default NavBar;\r\n","import React from \"react\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Item = ({ item }) => {\r\n  console.log(item);\r\n  const formatPeso = new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n    minimumFractionDigits: 2\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {item.map((data) => (\r\n        <Card key={data.id}>\r\n          <Image src={data.imageUrl} width=\"5\" wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>{data.title}</Card.Header>\r\n\r\n            <Card.Description>\r\n              <p>{formatPeso.format(data.price)}</p>\r\n\r\n              <Link to={`/detalle/${data.id}`}>\r\n                <Button color=\"teal\"><span>Detalles</span></Button>\r\n              </Link>\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./ItemList.css\";\r\nimport { Item } from \"./Item/Item\";\r\n\r\nexport const ItemList = ({ items }) => {\r\n  return (\r\n    <>\r\n      {/* <div className=\"wrapper\"> */}\r\n\r\n      <div className=\"card\">\r\n        <Item item={items} />\r\n      </div>\r\n\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBzZ5ZCzDzY89RAqo89WLcUj0QAwVOmsk8\",\r\n  authDomain: \"eindhoven-coderhouse.firebaseapp.com\",\r\n  projectId: \"eindhoven-coderhouse\",\r\n  storageBucket: \"eindhoven-coderhouse.appspot.com\",\r\n  messagingSenderId: \"1088849446908\",\r\n  appId: \"1:1088849446908:web:4b5c69bded4408f77d9479\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const db = firebase.firestore();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Loader } from \"semantic-ui-react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { ItemList } from \"./ItemList/ItemList\";\r\n\r\nimport { db } from \"../../../firebase/firebase\";\r\n\r\n\r\n\r\nexport const ItemListContainer = () => {\r\n  const [items, setItems] = useState([]);\r\n  const {category} = useParams();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"items\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const documents = querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setItems(documents);\r\n      });\r\n  }, []);\r\n\r\n  // return (\r\n  //   <>\r\n  //     {items.length === 0 ? (\r\n  //       <Container className=\"container-loader\">\r\n  //         <Loader active inline=\"centered\" size=\"large\">\r\n  //           Cargando\r\n  //         </Loader>\r\n  //       </Container>\r\n  //     ) : (\r\n  //       <ItemList items={items} />\r\n  //     )}\r\n  //   </>\r\n  // );\r\n\r\n  if (items.length > 0){\r\n\r\n    if(category !== undefined){\r\n        return(\r\n\r\n\r\n                <ItemList items={ items.filter(product => product.category === `${category}`) } />\r\n\r\n        )\r\n    }else{\r\n        return(\r\n\r\n                <ItemList items={items} />\r\n\r\n\r\n        )\r\n    }\r\n}else{\r\n    return(\r\n      <Container className=\"container-loader\">\r\n               <Loader active inline=\"centered\" size=\"large\">\r\n                 Cargando\r\n               </Loader>\r\n             </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\n};\r\n","import React from \"react\";\r\n// import { ItemCount } from \"./ItemCount/ItemCount\";\r\nimport { ItemListContainer } from \"./ItemListContainer/ItemListContainer\";\r\n// import { Container } from \"semantic-ui-react\";\r\n\r\nexport const Home = () => {\r\n  return <ItemListContainer />;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Container, Button } from \"semantic-ui-react\";\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport \"./ItemCount.css\";\r\n\r\nexport const ItemCount = ({ stock, initial, item, addCart }) => {\r\n  const [count, setCount] = useState(parseInt(initial));\r\n\r\n  let btnDel = false;\r\n  let btnAdd = false;\r\n  let btnStock = false;\r\n\r\n  const delOneItem = (e) => {\r\n    count > 1\r\n      ? setCount(count - 1)\r\n      : console.log(\"El stock debe ser mayor a 1\");\r\n    //  console.log(btnDel);\r\n  };\r\n\r\n  const addOneItem = (e) => {\r\n    count < stock ? setCount(count + 1) : console.log(\"Ha superado el stock\");\r\n  };\r\n\r\n\r\n\r\n  if (stock === 0) {\r\n    btnStock= true;\r\n\r\n  }\r\n\r\n  if (stock < 0) {\r\n    btnStock = true;\r\n  }\r\n\r\n  if (count === 1) {\r\n    btnDel = true;\r\n  }\r\n\r\n  if (count === stock) {\r\n    btnAdd = true;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"buttons-container\">\r\n        {/* <button disabled={btnDel} onClick={delOneItem}>\r\n          -\r\n        </button> */}\r\n        <div className='all-buttons'>\r\n        <button disabled={btnDel} onClick={delOneItem} className='minus-button'>\r\n          <i className='minus icon'></i>\r\n        </button>\r\n\r\n        {stock === 0 || stock < 0 ?  <div><p>0</p></div> :  <div>\r\n          <p>{count}</p>\r\n        </div>}\r\n\r\n        {stock === 0 ? <button disabled={btnStock} className='plus-button'>\r\n          <i className='plus icon'></i>\r\n        </button> :\r\n\r\n        <button disabled={btnAdd} onClick={addOneItem} className='plus-button'>\r\n          <i className='plus icon'></i>\r\n        </button>}\r\n      </div>\r\n\r\n      </div>\r\n      <div className='cart-button'>\r\n      {/* */}\r\n\r\n\r\n\r\n      {stock === 0 || stock < 0 ? <Button color='teal' disabled={btnStock} className=\"btn_Carrito\" onClick={() => addCart(count, item)}>\r\n<div className='center-btn-cart'>\r\n <i className='shopping cart icon'><span>Agregar</span></i>\r\n </div>\r\n</Button> : <Link to={\"/cart\"}>\r\n\r\n<Button color='teal' disabled={btnStock} className=\"btn_Carrito\" onClick={() => addCart(count, item)}>\r\n<div className='center-btn-cart'>\r\n <i className='shopping cart icon'><span>Agregar</span></i>\r\n </div>\r\n</Button>\r\n\r\n</Link> }\r\n\r\n\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport {CartContext} from '../../../../../Context/CartContext';\r\n\r\n// import { Image, Card } from \"semantic-ui-react\";\r\nimport { Icon, Image, Item, Rating } from 'semantic-ui-react'\r\n\r\n\r\n\r\n\r\nimport {ItemCount} from '../../../ItemCount/ItemCount'\r\n\r\n\r\n\r\nimport './ProductCard.css'\r\n\r\nexport const ProductCard = ({ item }) => {\r\n\r\n  const formatPeso = new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n    minimumFractionDigits: 2\r\n  })\r\n\r\n  const [initial, setInitial] = useState(1);\r\n\r\n  const myContext = useContext(CartContext);\r\n\r\n  const addCart = (count, item) => {\r\n    myContext.addToCart({\r\n      item: item.title,\r\n      quantity: count,\r\n      price: item.price,\r\n      imageUrl: item.imageUrl,\r\n      id: item.id,\r\n      stock: item.stock,\r\n    });\r\n\r\n    setInitial(count);\r\n    myContext.updateItems();\r\n  }\r\n\r\n\r\n\r\n  console.log(item.stock);\r\n\r\n\r\n  return (\r\n    // <Card>\r\n    //   <Image src={item.imageUrl} width=\"5\" wrapped ui={false} />\r\n    //   <Card.Content>\r\n    //     <Card.Header>{item.title}</Card.Header>\r\n    //     <Card.Header>{item.detail}</Card.Header>\r\n\r\n    //     <Card.Description>\r\n    //       <p>{formatPeso.format(item.price)}</p>\r\n    //     </Card.Description>\r\n    //   </Card.Content>\r\n    // </Card>\r\n\r\n\r\n    <Item className='item-container'>\r\n    <Item.Image src={item.imageUrl} className='item-image'/>\r\n\r\n\r\n    <Item.Content className='item-content'>\r\n      <Item.Header className='item-title'><h2>{item.title}</h2></Item.Header>\r\n      <Item.Extra>\r\n\r\n<Rating icon='star' defaultRating={5} maxRating={5} clearable />\r\n</Item.Extra>\r\n      <Item.Header className='item-price'><h3>{formatPeso.format(item.price)}</h3></Item.Header>\r\n      <Item.Description className='item-description'><p>{item.detail}</p></Item.Description>\r\n\r\n      <Item.Extra>\r\n        {item.stock > 0 ? <div className='tags'>\r\n          <span className='tag tag-stock'>En stock</span>\r\n        </div> : <div className='tags'><span className='tag tag-no-stock'>Sin stock</span> </div>  }\r\n\r\n      </Item.Extra>\r\n\r\n      <ItemCount\r\n          stock={item.stock}\r\n          initial={initial}\r\n          item={item}\r\n          addCart={addCart}\r\n        />\r\n\r\n    </Item.Content>\r\n  </Item>\r\n\r\n\r\n\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { ItemCount } from \"../../ItemCount/ItemCount\";\r\nimport { ProductCard } from \"./Card/ProductCard\";\r\nimport { Container, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../../../Context/CartContext\";\r\nimport \"./ItemDetail.css\";\r\n\r\nexport const ItemDetail = ({ item }) => {\r\n  // const [show, setShow] = useState(true);\r\n\r\n\r\n\r\n\r\n  // const [initial, setInitial] = useState(1);\r\n\r\n  // const myContext = useContext(CartContext);\r\n\r\n  // const addCart = (count, item) => {\r\n  //   myContext.addToCart({\r\n  //     item: item.title,\r\n  //     quantity: count,\r\n  //     price: item.price,\r\n  //     imageUrl: item.imageUrl,\r\n  //     id: item.id,\r\n  //     stock: item.stock,\r\n  //   });\r\n\r\n    // setShow(!show);\r\n  //   setInitial(count);\r\n  //   myContext.updateItems();\r\n  // };\r\n\r\n  // const showCount = () => {\r\n  //   setShow(!show);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n    <Container className='item-detail-container'>\r\n      <Container className=\"itemDetail\" key={item.id}>\r\n      <div className=\"wrapper\">\r\n\r\n\r\n        {/* {show ? (\r\n            <Container>\r\n              <ProductCard item={item}>\r\n              <ItemCount\r\n                  stock={item.stock}\r\n                  initial={initial}\r\n                  item={item}\r\n                  addCart={addCart}\r\n                />\r\n              </ProductCard >\r\n\r\n            </Container>\r\n          ) : (\r\n            <Container>\r\n              <div className=\"item-detail-container\">\r\n\r\n                <h3>Cantidad: {initial}</h3>\r\n                <div className=\"buttons-compra\">\r\n                  <div className=\"button-cancelar-container\">\r\n                    <Button className=\"button-cancelar\" onClick={() => showCount()}>\r\n                      Cancelar\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"button-finalizar-container\">\r\n                    <Link to={\"/cart\"}>\r\n                      <Button className=\"button-finalizar\" item={item}>\r\n                        Finalizar Compra\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n\r\n            </Container>\r\n          )} */}\r\n\r\n          <Container>\r\n            <ProductCard item={item}>\r\n\r\n            </ProductCard >\r\n            {/* <ItemCount\r\n              stock={item.stock}\r\n              initial={initial}\r\n              item={item}\r\n              addCart={addCart}\r\n            /> */}\r\n          </Container>\r\n        </div>\r\n      </Container>\r\n      </Container>\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { ItemDetail } from \"./ItemDetail/ItemDetail\";\r\n\r\nimport { Loader, Container } from \"semantic-ui-react\";\r\nimport { db } from \"../../../firebase/firebase\";\r\n\r\nexport const ItemDetailContainer = () => {\r\n  const [item, setItem] = useState([]);\r\n  const { productID } = useParams();\r\n\r\n  useEffect(() => {\r\n    const itemCollection = db.collection(\"items\");\r\n    const item = itemCollection.doc(productID);\r\n\r\n    item\r\n      .get()\r\n      .then((doc) => {\r\n        if (!doc.exists) {\r\n          setItem(\"not exist\");\r\n          return;\r\n        }\r\n\r\n        setItem({ id: doc.id, ...doc.data() });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [productID]);\r\n\r\n  return (\r\n    <>\r\n      {item.length === 0 ? (\r\n        <Container className=\"container-loader\">\r\n          <Loader active inline=\"centered\" size=\"large\">\r\n            Cargando el producto\r\n          </Loader>\r\n        </Container>\r\n      ) : (\r\n        <ItemDetail item={item} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Table, Icon, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CartContext } from '../../Context/CartContext';\r\n\r\nimport './Cart.css';\r\n\r\nexport const Cart = ({ item }) => {\r\n  const { cart, total, deleteItem } = useContext(CartContext);\r\n  const formatPeso = new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n    minimumFractionDigits: 2\r\n  })\r\n\r\n  console.log(formatPeso.format(10000))\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"cart-container\">\r\n      {cart.length > 0 ? (\r\n        <Table unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Producto</Table.HeaderCell>\r\n              <Table.HeaderCell>Precio</Table.HeaderCell>\r\n              <Table.HeaderCell className='quantity'>Cantidad</Table.HeaderCell>\r\n              <Table.HeaderCell>Total</Table.HeaderCell>\r\n              <Table.HeaderCell>Eliminar</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          {cart.map((item, i) => (\r\n            <>\r\n              <Table.Body key={i}>\r\n                <Table.Row>\r\n                  <Table.Cell clasName='imgProduct'>\r\n                    <div className='product-table'>\r\n                      <img src={item.imageUrl} alt={item.item} width='100' />\r\n                      <p>{item.item}</p>\r\n                    </div>\r\n                  </Table.Cell>\r\n                  {/* <Table.Cell>${item.price},00</Table.Cell> */}\r\n                  <Table.Cell>{formatPeso.format(item.price)}</Table.Cell>\r\n                  <Table.Cell>{item.quantity}</Table.Cell>\r\n                  <Table.Cell>{formatPeso.format(item.quantity * item.price)}</Table.Cell>\r\n                  <Table.Cell>\r\n                    <Icon\r\n                      onClick={() => deleteItem(item.item)}\r\n                      link\r\n                      name='close'\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row></Table.Row>\r\n                <Table.Row></Table.Row>\r\n                <Table.Row></Table.Row>\r\n                <Table.Row></Table.Row>\r\n                <Table.Row></Table.Row>\r\n              </Table.Body>\r\n            </>\r\n          ))}\r\n\r\n          <Table.Row>\r\n          <Table.Cell></Table.Cell>\r\n          <Table.Cell></Table.Cell>\r\n          <Table.Cell></Table.Cell>\r\n          <Table.Cell>\r\n            {/* <h3>Subtotal: ${total},00</h3> */}\r\n\r\n\r\n            <h3> Subtotal: <span>{formatPeso.format(total)}</span></h3>\r\n          </Table.Cell>\r\n          <Table.Cell>\r\n          <Link to={\"/order\"}>\r\n\r\n<Button color='teal'>\r\n<div className='center-btn-cart'>\r\n <i className='shopping cart icon'><span>Agregar</span></i>\r\n </div>\r\n</Button>\r\n\r\n</Link>\r\n          </Table.Cell>\r\n          </Table.Row>\r\n        </Table>\r\n      ) : (\r\n        <div className='cart-container'>\r\n          <h2 className='text-cart'>Tu carrito está vacío</h2>\r\n          <Link to='/' className='link-carrito'>\r\n            <Button className='button-regresar'>Volver a la tienda</Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      </div>\r\n\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n\r\n// Import firebase para usar la libreria de timestamp\r\nimport firebase from 'firebase/app';\r\nimport '@firebase/firestore';\r\n\r\n//Firestore\r\nimport { db } from '../../firebase/firebase';\r\n\r\n//Context\r\nimport { CartContext } from '../../Context/CartContext';\r\n\r\n// Semantic\r\n// import {Form, Input} from 'semantic-ui-react'\r\n\r\n//React-router\r\nimport { Link } from 'react-router-dom';\r\n\r\n//History\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//Hook-Form\r\nimport { useForm } from 'react-hook-form';\r\n\r\n// Styles\r\nimport './BuyForm.css';\r\n\r\nexport const BuyForm = () => {\r\n  const { cart, setCart, total, orderIds, setOrderIds, itemsInLocal } =\r\n    useContext(CartContext);\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const email = watch('email');\r\n  const confirmEmail = watch('confirmEmail');\r\n\r\n  const [passErr, setPassErr] = useState(false);\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const [newId, setNewId] = useState();\r\n\r\n  const formatPeso = new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n    minimumFractionDigits: 2\r\n  })\r\n\r\n  // const cartLocal = setCart(itemsInLocal);\r\n  // console.log(cartLocal);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.length !== 0) {\r\n    }\r\n  }, [cart, history]);\r\n\r\n  //Funcion para actualizr los stocks en firestore de los productos recien comprados\r\n  const updateStocks = () => {\r\n    const itemCollection = db.collection('items');\r\n    const bache = db.batch();\r\n\r\n    cart.forEach((item) => {\r\n      bache.update(itemCollection.doc(item.id), {stock: item.stock - item.quantity});\r\n    });\r\n\r\n    bache\r\n      .commit()\r\n      .then(() => {\r\n        console.log('Bache ok');\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const handleOrder = (data) => {\r\n    if (data) {\r\n      let order = {\r\n        buyer: {\r\n          name: `${data.name} ${data.lastname}`,\r\n          phone: data.telephone,\r\n          email: data.email\r\n        },\r\n        items: cart.map((item) => ({\r\n          id: item.id,\r\n          item: item.item,\r\n          price: item.price,\r\n          qty: item.quantity\r\n        })),\r\n        date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n        total: total\r\n      };\r\n      console.log(order);\r\n      console.log(cart);\r\n      localStorage.removeItem('cart');\r\n      console.log(cart);\r\n      setCart(itemsInLocal);\r\n\r\n\r\n\r\n\r\n\r\n      const ordersCollection = db.collection('orders');\r\n\r\n      ordersCollection\r\n        .add(order)\r\n        .then(({ id }) => {\r\n          setOrderIds([...orderIds, { id }]);\r\n          setNewId(id);\r\n\r\n\r\n        })\r\n        .catch((err) => {\r\n          setError(err);\r\n        })\r\n        .finally(() => {\r\n          updateStocks();\r\n\r\n\r\n          newId !== '' && history.push('/my-orders');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n\r\n    <div className='buy-form-container'>\r\n    <h1>Formulario de Compra</h1>\r\n      <form onSubmit={handleSubmit(handleOrder)} className='form-container'>\r\n        <div className='input-field'>\r\n          {/* <i className='material-icons prefix'>account_circle</i> */}\r\n          <i className=\"user icon\"></i>\r\n          <input\r\n            name='name'\r\n            id='name'\r\n            type='text'\r\n            className='validate'\r\n            autoComplete='none'\r\n            ref={register({\r\n              required: 'Ingresar nombre',\r\n              minLength: { value: 2, message: 'Minimo 2 caracteres' },\r\n              maxLength: { value: 12, message: 'Maximo 12 caracteres' },\r\n            })}\r\n          />\r\n          <label htmlFor='name'>Nombre</label>\r\n          {errors.name && <small>{errors.name.message}</small>}\r\n        </div>\r\n\r\n        <div className='input-field'>\r\n        <i className=\"user icon\"></i>\r\n          <input\r\n            name='lastname'\r\n            id='lastname'\r\n            type='text'\r\n            className='validate'\r\n            autoComplete='none'\r\n            ref={register({\r\n              required: 'Ingresar apellido',\r\n              minLength: { value: 2, message: 'Minimo 2 caracteres' },\r\n              maxLength: { value: 12, message: 'Maximo 12 caracteres' },\r\n            })}\r\n          />\r\n          <label htmlFor='lastname'>Apellido</label>\r\n          {errors.lastname && <small>{errors.lastname.message}</small>}\r\n        </div>\r\n\r\n        <div className='input-field'>\r\n          {/* <i className='material-icons prefix'>phone</i> */}\r\n          <i className='phone icon'></i>\r\n          <input\r\n            name='telephone'\r\n            id='telephone'\r\n            type='tel'\r\n            className='validate'\r\n            autoComplete='none'\r\n            ref={register({\r\n              required: 'Ingrese su numero',\r\n              pattern: {\r\n                value:\r\n                  /^(?:(?:00)?549?)?0?(?:11|[2368]\\d)(?:(?=\\d{0,2}15)\\d{2})??\\d{8}$/,\r\n                message: 'Ingrese un numero valido',\r\n              },\r\n            })}\r\n          />\r\n          <label htmlFor='telephone'>Telefono/Celular</label>\r\n          {errors.telephone && <small>{errors.telephone.message}</small>}\r\n        </div>\r\n\r\n        <div className='input-field'>\r\n          {/* <i className='material-icons prefix'>email</i> */}\r\n          <i className='mail icon'></i>\r\n          <input\r\n            name='email'\r\n            id='email'\r\n            type='email'\r\n            className='validate'\r\n            autoComplete='none'\r\n            ref={register({\r\n              required: 'Ingrese un email',\r\n              pattern: {\r\n                value:\r\n                  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                message: 'Ingrese un email valido',\r\n              },\r\n            })}\r\n          />\r\n          <label htmlFor='email'>Email</label>\r\n          {errors.email && <small>{errors.email.message}</small>}\r\n        </div>\r\n\r\n        <div className='input-field'>\r\n          {/* <i className='material-icons prefix'>email</i> */}\r\n          <i className='mail icon'></i>\r\n          <input\r\n            name='confirmEmail'\r\n            id='confirmEmail'\r\n            type='email'\r\n            className='validate'\r\n            autoComplete='none'\r\n            ref={register({\r\n              required: 'Ingrese un email',\r\n              pattern: {\r\n                value:\r\n                  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                message: 'Ingrese un email valido',\r\n              },\r\n            })}\r\n            onBlur={() =>\r\n              confirmEmail !== email ? setPassErr(true) : setPassErr(false)\r\n            }\r\n            onChange={() => confirmEmail === email && setPassErr(false)}\r\n          />\r\n          <label htmlFor='confirmEmail'>Confirmar Email</label>\r\n          {passErr && <small>{'Sus emails son diferentes'}</small>}\r\n        </div>\r\n\r\n        {/* Unica forma de que los autocomplete \"none\" funcionen fue agregando autoComplete = \"none\" a todos los inputs\r\n        y crear un ultimo input innecesario (display: none) con autoComplete='on' */}\r\n        <div className='input-field' style={{ display: 'none' }}>\r\n          <i className='material-icons prefix'>email</i>\r\n          <input id='asd' type='email' className='validate' autoComplete='on' />\r\n          <label htmlFor='asd'>Email</label>\r\n        </div>\r\n        {/* Fin de input innecesario :D */}\r\n\r\n        <h5 className='total-amount'>Subtotal: &nbsp; {formatPeso.format(total)}</h5>\r\n        <span></span>\r\n        {error && <p>{error}</p>}\r\n\r\n        {\r\n          // <Link to={'/my-orders'}>\r\n            <button\r\n              disabled={confirmEmail !== email}\r\n              type='submit'\r\n              className='waves-effect btn btn-buy '\r\n\r\n            >\r\n              Finalizar compra\r\n            </button>\r\n          // </Link>\r\n        }\r\n      </form>\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\n// {confirmEmail !== email}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\n//Luxon\r\nimport { DateTime } from 'luxon';\r\n\r\n//Context\r\nimport { CartContext } from '../../Context/CartContext';\r\n\r\n//Firestore\r\nimport { db } from '../../firebase/firebase';\r\n\r\n//Styles\r\nimport './MyOrders.css'\r\n\r\nexport const MyOrders = () => {\r\n  const { orderIds, setOrderIds } = useContext(CartContext);\r\n\r\n  const [ordersInfo, setOrdersInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    // En \"getOrders\", \"itemRefs\" devuelve una promesa del documento especifico por cada id de compra que hay en el array de ids \"orderIds\".\r\n    // Luego voy a esperar que se resuelvan todas esas promesas con un Promise.All y ahi si llamar a setOrdersInfo para guardar la informacion.\r\n    if (isMounted) {\r\n      const getOrders = (orderIds, setOrdersInfo) => {\r\n        let itemRefs = orderIds.map(({ id }) => {\r\n          return db.collection('orders').doc(id).get();\r\n        });\r\n\r\n        Promise.all(itemRefs)\r\n          .then((docs) => {\r\n            let items = docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n            //Reverse para que la ultima compra figure arriba\r\n            setOrdersInfo(items.reverse());\r\n          })\r\n          .catch((e) => console.log(e));\r\n      };\r\n      getOrders(orderIds, setOrdersInfo);\r\n\r\n      return () => {\r\n        isMounted = false;\r\n      };\r\n    }\r\n  }, [orderIds]);\r\n\r\n  const time = (seconds) => {\r\n    return DateTime.fromSeconds(seconds);\r\n  };\r\n\r\n  return (\r\n    <div className='orders-container'>\r\n      <div className='orders-organizer'>\r\n        <h3 className='title'>Mis compras</h3>\r\n\r\n        <button\r\n\r\n          className='btn-clear'\r\n          onClick={() => {\r\n            localStorage.removeItem('my-orders');\r\n            setOrderIds([]);\r\n          }}\r\n        >\r\n          Borrar historial\r\n        </button>\r\n\r\n        <div className='orders-columns'>\r\n          <p>Fecha</p>\r\n          <p>Productos</p>\r\n          <p>Codigo de pedido</p>\r\n          <p>Total</p>\r\n        </div>\r\n        <div className='orders'>\r\n          {ordersInfo.length > 0 &&\r\n            ordersInfo.map(({ id, total, date, items }) => (\r\n              <div className='order-row' key={id}>\r\n                <div className='order-info date'>\r\n                  {date &&\r\n                    `${time(date.seconds).c.day}/${\r\n                      time(date.seconds).c.month\r\n                    }/${time(date.seconds).c.year}\r\n                                      ${time(date.seconds).c.hour}:${\r\n                      time(date.seconds).c.minute\r\n                    } `}\r\n                </div>\r\n                <div className='order-info items'>\r\n                  <ul>\r\n                    {items &&\r\n                      items.map((item) => (\r\n                        <li key={item.id}>\r\n                          {' '}\r\n                          {item.qty} x {item.item}{' '}\r\n                        </li>\r\n                      ))}\r\n                  </ul>\r\n                </div>\r\n                <div className='order-info id '> {id} </div>\r\n                <div className='order-info total'> ${total} </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { NavBar } from './components/Home/NavBar/NavBar';\nimport { Home } from './components/Home/Home';\nimport {ItemListContainer} from './components/Home/ItemListContainer/ItemListContainer'\n\nimport { ItemDetailContainer } from './components/Home/ItemDetailContainer/ItemDetailContainer';\nimport { Cart } from './components/Cart/Cart';\nimport { CartProvider } from './Context/CartContext';\nimport { BuyForm } from './components/BuyForm/BuyForm';\nimport { MyOrders } from './components/MyOrders/MyOrders';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <CartProvider>\n        <Router>\n          <NavBar />\n\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/categories/:category'>\n              <ItemListContainer />\n            </Route>\n\n            <Route path='/detalle/:productID'>\n              <ItemDetailContainer />\n            </Route>\n            <Route path='/cart'>\n              <Cart />\n            </Route>\n            <Route path='/order'>\n              <BuyForm />\n            </Route>\n            <Route path='/my-orders'>\n              <MyOrders />\n            </Route>\n          </Switch>\n        </Router>\n      </CartProvider>\n    </>\n  );\n}\n\nexport default App;\n\n// title={\"Mi título de ItemListContainer\"}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// Semantic UI\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}